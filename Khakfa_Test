import org.apache.spark.sql.SparkSession
import org.scalatest.funsuite.AnyFunSuite
import org.scalatest.BeforeAndAfter

class DataPipelineTest extends AnyFunSuite with BeforeAndAfter {
  var spark: SparkSession = _

  before {
    spark = SparkSession.builder().appName("DataPipelineTest").master("local[2]").getOrCreate()
  }

  after {
    if (spark != null) {
      spark.stop()
    }
  }

  test("Test readJsonData function") {
    val url = "http://18.133.73.36:5001/insurance_claims1"
    val df = DataPipeline.readJsonData(spark, url)
    assert(df.count() > 0)
    // Add more assertions as needed
  }

  test("Test generateUniqueRowKey function") {
    val message = "test message"
    val rowKey = DataPipeline.generateUniqueRowKey(message)
    assert(rowKey.nonEmpty)
    // Add more assertions as needed
  }
}
